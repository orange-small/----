线性表的顺序存储结构
又称随机存储结构

顺序存储：依次存储
特性：没数据还占座
结构代码

#define MAXSIZE 20
typedef int ElemType;  //整型的
typedef struct
{
	ElemType data[MAXSIZE];
	int length;
}SqList;

封装的三个属性：
1.存储空间的起始位置，数组data (座位）
2.最大存储容量 （一般初始化不变，若变，需动态扩容，可能降低性能）
3.length：当前线性表的长度 （时刻可变，只看元素个数）

地址计算方法（线性表是从1开始的）
ElemType 占用c个存储单元（字节），存储位置关系：LOC(i+1）=LOC(i）+ c;

元素	1	2	3	4	5	n
数组	0	1	2	3	4	n-1

第n个元素的位置=第1个元素的位置 + （n-1)*c  

可通过公式 一次 计算出存储地址，存储时间性能为 O（1）



GetElem操作
将线性表中第i个位置元素值返回->将数组第i-1下标 值返回；
具体见 getelem.cpp


ListInsert
思路：
1.插入位置不合理，抛出异常
2.线性表长度大于等于数组长度--》没有插入的位置，抛出异常，或动态增加数组容量
3.从最后一个 位置向前遍历到第i个位置，分别将它们都向后移动一个位置
4.将插入元素放到i处
5.线性表长度+1
具体见cpp
